/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetoPizzaria.view;

import ProjetoPizzaria.DAO.IngredientesPizzaDAO;
import ProjetoPizzaria.modelo.IngredientesPizza;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Casa
 */
public class IFrmCadIngredientePizza extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmCadIngredientePizza
     */
    public IFrmCadIngredientePizza() {
        initComponents();
         getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomeIngrediente = new javax.swing.JTextField();
        txtQuantidadeIngrediente = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CbTipoUnidade = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtQuantMin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQuantMax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Cadastrar Ingredientes");

        txtQuantidadeIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeIngredienteActionPerformed(evt);
            }
        });
        txtQuantidadeIngrediente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantidadeIngredienteKeyPressed(evt);
            }
        });

        btnCadastrar.setBackground(new java.awt.Color(255, 51, 51));
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome do Ingrediente:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Quantidade atual:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tipo de unidade:");

        CbTipoUnidade.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CbTipoUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "GRAMAS", "UNIDADES", "MILI-LITROS" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Quantidade mínima:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Quantidade máxima:");

        jLabel6.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel6AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastrar)
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQuantMax, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(13, 13, 13)
                        .addComponent(txtQuantMin))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CbTipoUnidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantidadeIngrediente)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CbTipoUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtQuantidadeIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCadastrar)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (txtNomeIngrediente.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o nome do ingrediente");
            txtNomeIngrediente.requestFocus();
            txtNomeIngrediente.setBackground(Color.PINK);
        } else if (CbTipoUnidade.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione algum tipo de medida");
        } else {
            txtNomeIngrediente.setBackground(Color.white);
            IngredientesPizza ingpizza = new IngredientesPizza();
            try {
                int quantidade = Integer.parseInt(txtQuantidadeIngrediente.getText());
                if (quantidade >= 0) {
                    txtQuantidadeIngrediente.setBackground(Color.white);
                    try {
                        int quantMin = Integer.parseInt(txtQuantMin.getText());
                        if (quantMin >= 0) {
                            txtQuantMin.setBackground(Color.white);
                            try {
                                int quantMax = Integer.parseInt(txtQuantMax.getText());
                                if (quantMax > 0) {
                                    txtQuantMax.setBackground(Color.white);

                                    // INICIO DAS CONDICIONAIS
                                    if (quantMin > quantMax) {
                                        JOptionPane.showMessageDialog(null, "A quantidade mínima não pode ser maior que a máxima", "Quantidade inválida", JOptionPane.OK_OPTION);
                                        txtQuantMin.setText("");
                                        txtQuantMin.requestFocus();
                                        txtQuantMin.setBackground(Color.pink);
                                    } else if (quantidade > quantMax) {
                                        JOptionPane.showMessageDialog(null, "A quantidade atual não pode ser maior que a quantidade máxima", "Quantidade inválida", JOptionPane.OK_OPTION);
                                        txtQuantidadeIngrediente.setText("");
                                        txtQuantidadeIngrediente.requestFocus();
                                        txtQuantidadeIngrediente.setBackground(Color.pink);
                                    } else if (quantidade < quantMin) {
                                        JOptionPane.showMessageDialog(null, "A quantidade atual não pode ser menor que a quantidade mínima", "Quantidade inválida", JOptionPane.OK_OPTION);
                                        txtQuantidadeIngrediente.setText("");
                                        txtQuantidadeIngrediente.requestFocus();
                                        txtQuantidadeIngrediente.setBackground(Color.pink);
                                    }  else {
                                        txtQuantidadeIngrediente.setBackground(Color.white);
                                        txtQuantMin.setBackground(Color.white);
                                        try {

                                            ingpizza.setNomeIngrediente(txtNomeIngrediente.getText());
                                            ingpizza.setQuantidade(quantidade);
                                            ingpizza.setTipoDeUnidade(CbTipoUnidade.getSelectedItem().toString());
                                            ingpizza.setQuantidadeMax(quantMax);
                                            ingpizza.setQuantidadeMin(quantMin);
                                            IngredientesPizzaDAO ingpizzadao = new IngredientesPizzaDAO();
                                            int r = JOptionPane.showConfirmDialog(null, "Deseja realmente cadastrar o ingrediente: \n Nome: ' " + txtNomeIngrediente.getText() + " '"
                                                    + "\n Tipo: ' " + CbTipoUnidade.getSelectedItem().toString() + " ' \n Quantidade atual: ' " + txtQuantidadeIngrediente.getText() + " ' \n Quantidade MIN: ' "+quantMin+
                                                    " '"+"\n Quantidade MAX: ' "+quantMax+" ' ?", "Cadastrar Ingrediente", JOptionPane.YES_NO_OPTION);
                                            if (r == 0) {
                                                ingpizzadao.CadastrarIngredientes(ingpizza);
                                                JOptionPane.showMessageDialog(null, "Cadastro Realizado com sucesso.");
                                                txtNomeIngrediente.setText("");
                                                txtNomeIngrediente.requestFocus();
                                                CbTipoUnidade.setSelectedIndex(0);
                                                txtQuantidadeIngrediente.setText("");
                                                txtQuantMin.setText("");
                                                txtQuantMax.setText("");
                                            }
                                        } catch (Exception e) {
                                            JOptionPane.showMessageDialog(null, "Por favor, preencha os campos corretamente", "Erro", JOptionPane.OK_OPTION);
                                        }
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade máxima corretamente", "Preenchar campo", JOptionPane.OK_OPTION);
                                    txtQuantMax.setText("");
                                    txtQuantMax.setBackground(Color.pink);
                                    txtQuantMax.requestFocus();
                                }
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade máxima corretamente", "Preenchar campo", JOptionPane.OK_OPTION);
                                txtQuantMax.setText("");
                                txtQuantMax.setBackground(Color.pink);
                                txtQuantMax.requestFocus();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade mínima corretamente", "Preenchar campo", JOptionPane.OK_OPTION);
                            txtQuantMin.setText("");
                            txtQuantMin.setBackground(Color.pink);
                            txtQuantMin.requestFocus();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade mínima corretamente", "Preenchar campo", JOptionPane.OK_OPTION);
                        txtQuantMin.setText("");
                        txtQuantMin.setBackground(Color.pink);
                        txtQuantMin.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade corretamete", "Preencher Campo", JOptionPane.OK_OPTION);
                    txtQuantidadeIngrediente.setText("");
                    txtQuantidadeIngrediente.requestFocus();
                    txtQuantidadeIngrediente.setBackground(Color.pink);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade corretamete", "Preencher Campo", JOptionPane.OK_OPTION);
                txtQuantidadeIngrediente.setText("");
                txtQuantidadeIngrediente.requestFocus();
                txtQuantidadeIngrediente.setBackground(Color.pink);
            }

        }

    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtQuantidadeIngredienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeIngredienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeIngredienteKeyPressed

    private void jLabel6AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel6AncestorAdded
        ImageIcon icon = new ImageIcon("src/ProjetoImagem/padrão.png");
    jLabel6.setIcon(new ImageIcon(icon.getImage().getScaledInstance(jLabel6.getWidth(),jLabel6.getHeight(), icon.getIconWidth())));
    }//GEN-LAST:event_jLabel6AncestorAdded

    private void txtQuantidadeIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeIngredienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeIngredienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbTipoUnidade;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtNomeIngrediente;
    private javax.swing.JTextField txtQuantMax;
    private javax.swing.JTextField txtQuantMin;
    private javax.swing.JTextField txtQuantidadeIngrediente;
    // End of variables declaration//GEN-END:variables
}
