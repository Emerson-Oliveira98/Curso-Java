/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetoPizzaria.view;

import ProjetoPizzaria.DAO.OutrosProdutosDAO;
import ProjetoPizzaria.modelo.OutrosProdutos;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Casa
 */
public class IFrmCadOutrosProdutos extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmCadOutrosProdutos
     */
    public IFrmCadOutrosProdutos() {
        initComponents();
         getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtQuantMin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQuantMax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastrar Outros Produtos");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome do Produto:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Preço:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Quantidade Atual:");

        btnCadastrar.setBackground(new java.awt.Color(255, 51, 51));
        btnCadastrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Quantidade mínima:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Quantidade máxima:");

        jLabel6.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel6AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeProduto))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantMin))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantMax)))
                .addContainerGap())
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(btnCadastrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQuantMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCadastrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (!txtNomeProduto.getText().equals("")) {
            txtNomeProduto.setBackground(Color.white);
            try {
                OutrosProdutos op = new OutrosProdutos();
                double preco = Double.parseDouble(txtPreco.getText());
                if (preco > 0) {
                    txtPreco.setBackground(Color.white);
                    try {
                        int quantidade = Integer.parseInt(txtQuantidade.getText());
                        if (quantidade >= 0) {
                            txtQuantidade.setBackground(Color.white);
                            try {
                                int quantMax = Integer.parseInt(txtQuantMax.getText());
                                if (quantMax <= 0) {
                                    JOptionPane.showMessageDialog(null, "Por favor, preencha corretamente a quantidade máxima", "Quantidade máxima inválida", JOptionPane.OK_OPTION);
                                    txtQuantMax.setBackground(Color.pink);
                                    txtQuantMax.setText("");
                                    txtQuantMax.requestFocus();
                                } else {
                                    txtQuantMax.setBackground(Color.white);
                                    try {
                                        int quantMin = Integer.parseInt(txtQuantMin.getText());
                                        if (quantMin < 0) {
                                            JOptionPane.showMessageDialog(null, "Por favor, preencha corretamente a quantidade mínima", "Quantidade mínima inválida", JOptionPane.OK_OPTION);
                                            txtQuantMin.setBackground(Color.pink);
                                            txtQuantMin.setText("");
                                            txtQuantMin.requestFocus();
                                        } else {
                                            txtQuantMin.setBackground(Color.white);
                                            if (quantidade > quantMax) {
                                                JOptionPane.showMessageDialog(null, "A quantidade atual não pode ser maior que a quantidade máxima", "Preencher quantidade", JOptionPane.OK_OPTION);
                                                txtQuantidade.setText("");
                                                txtQuantidade.requestFocus();
                                                txtQuantidade.setBackground(Color.pink);
                                            } else if (quantMax < quantMin) {
                                                JOptionPane.showMessageDialog(null, "A quantidade máxima não pode ser menor que a quantidade mínima", "Quantidade máxima inválida", JOptionPane.OK_OPTION);
                                                txtQuantMax.setBackground(Color.pink);
                                                txtQuantMax.setText("");
                                                txtQuantMax.requestFocus();
                                            } else if (quantMin > quantidade) {
                                                JOptionPane.showMessageDialog(null, "A quantidade mínima não pode ser maior que a quantidade atual", "Quantidade mínima inválida", JOptionPane.OK_OPTION);
                                                txtQuantMin.setBackground(Color.pink);
                                                txtQuantMin.setText("");
                                                txtQuantMin.requestFocus();
                                            } else {
                                                txtQuantidade.setBackground(Color.white);
                                                txtQuantMin.setBackground(Color.white);
                                                txtQuantMax.setBackground(Color.white);
                                                try {

                                                    op.setNomeProduto(txtNomeProduto.getText());
                                                    op.setPrecoProduto(preco);
                                                    op.setQuantidade(quantidade);
                                                    op.setQuantMax(quantMax);
                                                    op.setQuantMin(quantMin);
                                                    int r = JOptionPane.showConfirmDialog(null, "Deseja realmente cadastrar o produto: ' " + txtNomeProduto.getText() + " ' \nPreço: ' " + preco + " ' \nQuantidade: ' " + quantidade + " ' \nQuantidade máxima: '" + quantMax + "' \nQuantidade mínima: '" + quantMin + "' ?", "Cadastrar Ingrediente", JOptionPane.YES_NO_OPTION);
                                                    if (r == 0) {
                                                        OutrosProdutosDAO dao = new OutrosProdutosDAO();
                                                        dao.cadastrarProdutos(op);
                                                        JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso", "Cadastrar Produto", JOptionPane.OK_OPTION);
                                                        txtNomeProduto.setText("");
                                                        txtPreco.setText("");
                                                        txtQuantidade.setText("");
                                                        txtQuantMax.setText("");
                                                        txtQuantMin.setText("");
                                                    }

                                                } catch (Exception c) {
                                                    JOptionPane.showMessageDialog(null, "Não foi possivel realizar o cadastro", "Erro ao cadastrar", JOptionPane.OK_OPTION);

                                                }
                                            }

                                        }
                                    } catch (Exception e) {
                                        JOptionPane.showMessageDialog(null, "Por favor, preencha corretamente a quantidade mínima", "Quantidade mínima inválida", JOptionPane.OK_OPTION);
                                        txtQuantMin.setBackground(Color.pink);
                                        txtQuantMin.setText("");
                                        txtQuantMin.requestFocus();
                                    }
                                }
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Por favor, preencha corretamente a quantidade máxima", "Quantidade máxima inválida", JOptionPane.OK_OPTION);
                                txtQuantMax.setBackground(Color.pink);
                                txtQuantMax.setText("");
                                txtQuantMax.requestFocus();
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade corretamente", "Preencher quantidade", JOptionPane.OK_OPTION);
                            txtQuantidade.setText("");
                            txtQuantidade.requestFocus();
                            txtQuantidade.setBackground(Color.pink);
                        }
                    } catch (Exception b) {
                        JOptionPane.showMessageDialog(null, "Por favor, preencha o campo quantidade corretamente", "Preencher quantidade", JOptionPane.OK_OPTION);
                        txtQuantidade.setText("");
                        txtQuantidade.requestFocus();
                        txtQuantidade.setBackground(Color.pink);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha o campo preço corretamente", "Preencher preço", JOptionPane.OK_OPTION);
                    txtPreco.setText("");
                    txtPreco.requestFocus();
                    txtPreco.setBackground(Color.pink);
                }
            } catch (Exception a) {
                JOptionPane.showMessageDialog(null, "Por favor, preencha o campo preço corretamente", "Preencher preço", JOptionPane.OK_OPTION);
                txtPreco.setText("");
                txtPreco.requestFocus();
                txtPreco.setBackground(Color.pink);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo nome corretamente", "Preencher nome", JOptionPane.OK_OPTION);
            txtNomeProduto.requestFocus();
            txtNomeProduto.setBackground(Color.pink);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void jLabel6AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel6AncestorAdded
         ImageIcon icon = new ImageIcon("src/ProjetoImagem/padrão.png");
    jLabel6.setIcon(new ImageIcon(icon.getImage().getScaledInstance(jLabel6.getWidth(),jLabel6.getHeight(), icon.getIconWidth())));// TODO add your handling code here:
    }//GEN-LAST:event_jLabel6AncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantMax;
    private javax.swing.JTextField txtQuantMin;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
