/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetoPizzaria.view;

import ProjetoPizzaria.DAO.SaborBordaRecheadaDAO;
import ProjetoPizzaria.modelo.SaborBordaRecheada;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Casa
 */
public class IFrmPesquisarBordas extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmPesquisarBordas
     */
    public IFrmPesquisarBordas() {
        initComponents();
         getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoDeBotao1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        CbPesquisa = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNomeSabor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        RbMaior = new javax.swing.JRadioButton();
        RbMenor = new javax.swing.JRadioButton();
        RbIgual = new javax.swing.JRadioButton();
        BtnConfirmar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSaborBorda = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Pesquisar Bordas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Deseja realizar sua pesquisa por:");

        CbPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione alguma opção", "Sem critérios", "ID", "Nome do sabor", "Preço" }));
        CbPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbPesquisaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nome do Sabor:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Preço:");

        GrupoDeBotao1.add(RbMaior);
        RbMaior.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RbMaior.setText("Maior que");

        GrupoDeBotao1.add(RbMenor);
        RbMenor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RbMenor.setText("Menor que");

        GrupoDeBotao1.add(RbIgual);
        RbIgual.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RbIgual.setSelected(true);
        RbIgual.setText("Igual");

        BtnConfirmar.setBackground(new java.awt.Color(255, 51, 51));
        BtnConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BtnConfirmar.setForeground(new java.awt.Color(255, 255, 255));
        BtnConfirmar.setText("Confirmar");
        BtnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnConfirmarActionPerformed(evt);
            }
        });

        tblSaborBorda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sabor da Borda", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSaborBorda.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblSaborBorda);
        if (tblSaborBorda.getColumnModel().getColumnCount() > 0) {
            tblSaborBorda.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblSaborBorda.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jLabel5.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel5AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(CbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNomeSabor))
                                    .addComponent(BtnConfirmar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(RbMaior)
                                        .addGap(35, 35, 35)
                                        .addComponent(RbMenor)
                                        .addGap(27, 27, 27)
                                        .addComponent(RbIgual)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomeSabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(RbMaior)
                    .addComponent(RbMenor)
                    .addComponent(RbIgual))
                .addGap(25, 25, 25)
                .addComponent(BtnConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnConfirmarActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblSaborBorda.getModel();
        model.setRowCount(0);
        switch (CbPesquisa.getSelectedIndex()) {
            case 1:
                try {
                    SaborBordaRecheada sb = new SaborBordaRecheada();
                    SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                    dao.PesquisarInicial(sb, tblSaborBorda);
                } catch (Exception e) {
                }
                break;
            case 2:
                if (!txtID.getText().equals("")) {
                    try {
                        int x = Integer.parseInt(txtID.getText());
                        if (x != 0 && x > 0) {
                            SaborBordaRecheada sb = new SaborBordaRecheada();
                            SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                            dao.PesquisarPorID(sb, tblSaborBorda, txtID);
                            if (tblSaborBorda.getRowCount() == 0) {
                                JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!", "Nenhum registro", JOptionPane.OK_OPTION);
                                txtID.setText("");
                            } else {
                                JOptionPane.showMessageDialog(null, "Pesquisa realizada com sucesso.", "Atenção", JOptionPane.OK_OPTION);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Por favor, digite um ID válido", "Preencher ID", JOptionPane.OK_OPTION);
                            txtID.setText("");
                            txtID.requestFocus();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Por favor, digite um ID válido", "Preencher ID", JOptionPane.OK_OPTION);
                        txtID.setText("");
                        txtID.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha o campo ID", "Preencher ID", JOptionPane.OK_OPTION);
                }
                break;
            case 3:
                if (!txtNomeSabor.getText().equals("")) {
                    try {
                        SaborBordaRecheada sb = new SaborBordaRecheada();
                        SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                        dao.PesquisarPorNome(sb, tblSaborBorda, txtNomeSabor);
                        if (tblSaborBorda.getRowCount() == 0) {
                            JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!", "Nenhum registro", JOptionPane.OK_OPTION);
                            txtNomeSabor.setText("");
                        } else {
                            JOptionPane.showMessageDialog(null, "Pesquisa realizada com sucesso.", "Atenção", JOptionPane.OK_OPTION);
                        }
                    } catch (Exception e) {
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha o campo nome do sabor", "Preencher nome do sabor", JOptionPane.OK_OPTION);
                }
                break;
            case 4:
                if (!txtPreco.getText().equals("")) {
                    if (RbIgual.isSelected()) {
                        try {
                            double p = Double.parseDouble(txtPreco.getText());
                            if (p < 0) {
                                JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                                txtPreco.setText("");
                                txtPreco.requestFocus();
                            } else {
                                SaborBordaRecheada sb = new SaborBordaRecheada();
                                SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                                dao.PesquisarPorValorIGUAL(sb, tblSaborBorda, txtPreco);
                                if (tblSaborBorda.getRowCount() == 0) {
                                    JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!", "Nenhum registro", JOptionPane.OK_OPTION);
                                    txtPreco.setText("");
                                } else {
                                    JOptionPane.showMessageDialog(null, "Pesquisa realizada com sucesso.", "Atenção", JOptionPane.OK_OPTION);
                                }
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                            txtPreco.setText("");
                            txtPreco.requestFocus();
                        }

                    } else if (RbMenor.isSelected()) {
                        try {
                            double p = Double.parseDouble(txtPreco.getText());
                            if (p < 0) {
                                JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                                txtPreco.setText("");
                                txtPreco.requestFocus();
                            } else {
                                SaborBordaRecheada sb = new SaborBordaRecheada();
                                SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                                dao.PesquisarPorValorMENOR(sb, tblSaborBorda, txtPreco);
                                if (tblSaborBorda.getRowCount() == 0) {
                                    JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!", "Nenhum registro", JOptionPane.OK_OPTION);
                                    txtPreco.setText("");
                                } else {

                                    JOptionPane.showMessageDialog(null, "Pesquisa realizada com sucesso.", "Atenção", JOptionPane.OK_OPTION);
                                }
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                            txtPreco.setText("");
                            txtPreco.requestFocus();
                        }
                    } else if (RbMaior.isSelected()) {
                        try {
                            double p = Double.parseDouble(txtPreco.getText());
                            if (p < 0) {

                                JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                                txtPreco.setText("");
                                txtPreco.requestFocus();
                            } else {
                                SaborBordaRecheada sb = new SaborBordaRecheada();
                                SaborBordaRecheadaDAO dao = new SaborBordaRecheadaDAO();
                                dao.PesquisarPorValorMAIOR(sb, tblSaborBorda, txtPreco);
                                if (tblSaborBorda.getRowCount() == 0) {
                                    JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!", "Nenhum registro", JOptionPane.OK_OPTION);
                                    txtPreco.setText("");
                                } else {
                                    JOptionPane.showMessageDialog(null, "Pesquisa realizada com sucesso.", "Atenção", JOptionPane.OK_OPTION);
                                }
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Por favor, digite um preço válido", "Valor inválido", JOptionPane.OK_OPTION);
                            txtPreco.setText("");
                            txtPreco.requestFocus();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha o valor da borda", "Preencher Valor", JOptionPane.OK_OPTION);
                }
                break;
        }


    }//GEN-LAST:event_BtnConfirmarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        txtID.setEditable(false);
        txtID.setBackground(Color.lightGray);
        txtNomeSabor.setEditable(false);
        txtNomeSabor.setBackground(Color.lightGray);
        txtPreco.setEditable(false);
        txtPreco.setBackground(Color.lightGray);
        BtnConfirmar.setEnabled(false);
        RbIgual.setEnabled(false);
        RbMenor.setEnabled(false);
        RbMaior.setEnabled(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void CbPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbPesquisaActionPerformed
        switch (CbPesquisa.getSelectedIndex()) {
            case 0:
                BtnConfirmar.setEnabled(false);
                txtID.setEditable(false);
                txtID.setBackground(Color.lightGray);
                txtNomeSabor.setEditable(false);
                txtNomeSabor.setBackground(Color.lightGray);
                txtPreco.setEditable(false);
                txtPreco.setBackground(Color.lightGray);
                RbIgual.setEnabled(false);
                RbMenor.setEnabled(false);
                RbMaior.setEnabled(false);
                break;
            case 1:
                BtnConfirmar.setEnabled(true);
                txtID.setEditable(false);
                txtID.setBackground(Color.lightGray);
                txtNomeSabor.setEditable(false);
                txtNomeSabor.setBackground(Color.lightGray);
                txtPreco.setEditable(false);
                txtPreco.setBackground(Color.lightGray);
                RbIgual.setEnabled(false);
                RbMenor.setEnabled(false);
                RbMaior.setEnabled(false);
                break;
            case 2:
                txtID.setEditable(true);
                BtnConfirmar.setEnabled(true);
                txtID.setBackground(Color.white);
                txtNomeSabor.setEditable(false);
                txtNomeSabor.setBackground(Color.lightGray);
                txtPreco.setEditable(false);
                txtPreco.setBackground(Color.lightGray);
                RbIgual.setEnabled(false);
                RbMenor.setEnabled(false);
                RbMaior.setEnabled(false);

                break;
            case 3:
                txtNomeSabor.setEditable(true);
                txtNomeSabor.setBackground(Color.white);
                BtnConfirmar.setEnabled(true);
                txtID.setEditable(false);
                txtID.setBackground(Color.lightGray);
                txtPreco.setEditable(false);
                txtPreco.setBackground(Color.lightGray);
                RbIgual.setEnabled(false);
                RbMenor.setEnabled(false);
                RbMaior.setEnabled(false);
                break;
            case 4:
                txtNomeSabor.setEditable(false);
                txtNomeSabor.setBackground(Color.lightGray);
                BtnConfirmar.setEnabled(true);
                txtID.setEditable(false);
                txtID.setBackground(Color.lightGray);
                txtPreco.setEditable(true);
                txtPreco.setBackground(Color.white);
                RbIgual.setEnabled(true);
                RbMenor.setEnabled(true);
                RbMaior.setEnabled(true);
                break;
        }

    }//GEN-LAST:event_CbPesquisaActionPerformed

    private void jLabel5AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel5AncestorAdded
        ImageIcon icon = new ImageIcon("src/ProjetoImagem/padrão.png");
    jLabel5.setIcon(new ImageIcon(icon.getImage().getScaledInstance(jLabel5.getWidth(),jLabel5.getHeight(), icon.getIconWidth()))); 
    }//GEN-LAST:event_jLabel5AncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnConfirmar;
    private javax.swing.JComboBox<String> CbPesquisa;
    private javax.swing.ButtonGroup GrupoDeBotao1;
    private javax.swing.JRadioButton RbIgual;
    private javax.swing.JRadioButton RbMaior;
    private javax.swing.JRadioButton RbMenor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSaborBorda;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNomeSabor;
    private javax.swing.JTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
